#include <stdio.h>

#define N 7

int cost[][N + 1] = {
    {0, 1, 2, 3, 4, 5, 6, 7},
    {1, 0, 1, 1, 0, 0, 0, 0},
    {2, 0, 0, 0, 0, 1, 0, 1},
    {3, 0, 0, 0, 0, 0, 1, 0},
    {4, 1, 1, 1, 0, 0, 1, 1},
    {5, 0, 0, 0, 0, 0, 0, 0},
    {6, 0, 0, 0, 0, 0, 0, 0},
    {7, 0, 0, 0, 0, 1, 1, 0}
};

int visited[N + 1] = {0};
int topologicalOrder[N + 1];
int orderIndex = N;

void dfs(int v) {
    visited[v] = 1;
    for (int w = 1; w <= N; w++) {
        if (cost[v][w] == 1 && !visited[w]) {
            dfs(w);
        }
    }
    topologicalOrder[orderIndex--] = v;
}

void topologicalSort() {
    for (int v = 1; v <= N; v++) {
        if (!visited[v]) {
            dfs(v);
        }
    }
}

int main() {
    topologicalSort();
    printf("Topological ordering of vertices:\n");
    for (int i = 1; i <= N; i++) {
        printf("%d ", topologicalOrder[i]);
    }
    printf("\n");
    return 0;
}
